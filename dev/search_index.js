var documenterSearchIndex = {"docs":
[{"location":"#NonlinearTestProblems.jl-1","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"","category":"section"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"This package is a collection ℝⁿ  ℝᵐ functions commonly used for testing nonlinear solvers and optimizers.","category":"page"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"It just defines a very basic common API described below, and should be wrapped for practical use. In particular,","category":"page"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"Derivatives are not provided. It is recommended that you use one of the automatic differentiation packages from the Julia ecosystem, eg ForwardDiff.jl or Zygote.jl.\nIf you need an objective for an optimization problem, just use some transformation like sum(abs2, y).\nIf your API expects functions in some particular form, just wrap accordingly.","category":"page"},{"location":"#API-1","page":"NonlinearTestProblems.jl","title":"API","text":"","category":"section"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"domain_dimension\nrange_dimension\nroot\nstarting_point\nlower_bounds\nupper_bounds","category":"page"},{"location":"#NonlinearTestProblems.domain_dimension","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.domain_dimension","text":"domain_dimension(problem)\n\nDimension n of a the domain of a ℝⁿ  ℝᵐ test problem.\n\n\n\n\n\n","category":"function"},{"location":"#NonlinearTestProblems.range_dimension","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.range_dimension","text":"range_dimension(problem)\n\n\nDimension m of a the range of a ℝⁿ  ℝᵐ test problem.\n\nnote: Note\nDefaults to the domain dimension, only non-square implementations should need to define a method.\n\n\n\n\n\n","category":"function"},{"location":"#NonlinearTestProblems.root","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.root","text":"root(problem)\n\nRoot (solution) of a test problem. Formally,\n\nproblem(root(problem)) ≈ zeros(range_dimension(problem))\n\nProblems are guaranteed to have a unique root.\n\n\n\n\n\n","category":"function"},{"location":"#NonlinearTestProblems.starting_point","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.starting_point","text":"starting_point(problem)\n\nstarting_point(problem, α)\n\nRecommended starting point of a test problem for methods that need one (eg quasi-Newton). Usually taken from the literature that defines a problem, and should be “difficult”.\n\nWhen used with a (positive real) argument α, the method should attempt to make it more difficult (eg move away further from the root).\n\nnote: Note\nA default method is provided for the latter, problems just need to implement the single-argument version.\n\n\n\n\n\n","category":"function"},{"location":"#NonlinearTestProblems.lower_bounds","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.lower_bounds","text":"lower_bounds(problem)\n\n\nRecommended lower bounds for box-constrained methods. Lower- and upper bounds are guaranteed to contain the root. Coordinate-wise midpoints of bounds should not be near the root.\n\nSee also upper_bounds.\n\n\n\n\n\n","category":"function"},{"location":"#NonlinearTestProblems.upper_bounds","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.upper_bounds","text":"upper_bounds(problem)\n\n\nRecommended upper bounds for box-constrained methods. See lower_bounds.\n\n\n\n\n\n","category":"function"},{"location":"#Contributing-1","page":"NonlinearTestProblems.jl","title":"Contributing","text":"","category":"section"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"Contributions are welcome in the form of pull requests.","category":"page"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"Try to follow the coding style of the package, which mostly aims to conform to the manual and  YASGuide.\nLook at existing implementations as examples.\nAlways cite sources (see the CITATIONS.bib in the source).\nFeature requests and suggestions are welcome.","category":"page"},{"location":"#Test-problems-1","page":"NonlinearTestProblems.jl","title":"Test problems","text":"","category":"section"},{"location":"#","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.jl","text":"F_NWp281\nRosenbrock\nPowellSingular\nPowellBadlyScaled\nHelicalValley","category":"page"},{"location":"#NonlinearTestProblems.F_NWp281","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.F_NWp281","text":"Problem from Nocedal and Wright, p 281.\n\n\n\n\n\n","category":"type"},{"location":"#NonlinearTestProblems.Rosenbrock","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.Rosenbrock","text":"Rosenbrock function. (1) from Moré et al (1981).\n\n\n\n\n\n","category":"type"},{"location":"#NonlinearTestProblems.PowellSingular","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.PowellSingular","text":"Powell singular function. (13) from Moré et al (1981).\n\n\n\n\n\n","category":"type"},{"location":"#NonlinearTestProblems.PowellBadlyScaled","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.PowellBadlyScaled","text":"Powell's badly scaled function. (3) from Moré et al (1981).\n\n\n\n\n\n","category":"type"},{"location":"#NonlinearTestProblems.HelicalValley","page":"NonlinearTestProblems.jl","title":"NonlinearTestProblems.HelicalValley","text":"Helical valley function. (7) from Moré et al (1981).\n\n\n\n\n\n","category":"type"}]
}
